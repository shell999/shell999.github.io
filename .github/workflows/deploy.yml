# workflow name
name: github pages

# workflow 실행조건
on:
  # 해당 branch에 push될때마다 실행
  push:
    branches: ['main']

# 실행 jobs
jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./gitblog
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}
      cancel-in-progress: true      # 같은 그룹에서 이전 실행중 작업을 취소, 빌드는 최신기준으로 함

    steps:
      - name: Use repository source
        uses: actions/checkout@v3

      - name: Use node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 이게 없으면 workflow를 실행할 때 마다 node_modules를 다시 생성
      - name: Cache node_modules
        id: cache
        uses: actions/cache@v3
        with:
          path: '**/node_mudules'                                             # 캐싱할 디렉토리
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          # chache hit가 발생하지 않을 경우, restore-keys에 있는 것을 꺼냅니다. (단, npm ci 명령은 실행)
          # 기존의 node_modules 캐시를 기반으로 추가된 패키지만 설치, 처음부터 node_modules 폴더를 생성하는 것보다 시간 단축
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci
        # cache hit가 발생한 경우 (즉, package-lock.json이 변경되지 않은 경우) npm ci 실행은 skip
        if: steps.cache.outputs.cache-hit != 'true'

      # 빌드 수행
      - name: Build
        run: npm run build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./gitblog/build